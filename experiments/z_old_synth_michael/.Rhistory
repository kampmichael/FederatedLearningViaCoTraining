geom_candlestick(aes(open = open, high = high, low = low, close = close)) +
geom_ma(color = "darkgreen") +
coord_x_date(xlim = c("2016-01-01", "2016-12-31"),
ylim = c(75, 125))
# Bar Chart
AAPL %>%
ggplot(aes(x = date, y = close)) +
geom_barchart(aes(open = open, high = high, low = low, close = close),colour_up = c("green","red")) +
geom_ma(color = "darkgreen") +
coord_x_date(xlim = c("2016-01-01", "2016-12-31"),
ylim = c(75, 125))
# Bar Chart
AAPL %>%
ggplot(aes(x = date, y = close)) +
geom_barchart(aes(open = open, high = high, low = low, close = close),colour_up = c("green4","red")) +
geom_ma(color = "darkgreen") +
coord_x_date(xlim = c("2016-01-01", "2016-12-31"),
ylim = c(75, 125))
# Bar Chart
AAPL %>%
ggplot(aes(x = date, y = close)) +
geom_barchart(aes(open = open, high = high, low = low, close = close),colour_up = c("green4","red"))
60*700
12*60
library(projectXcppCode)
new_ohlc <- MarketApiProcess(currency_pair = c("XBT","EUR"),action = "ohlc")
new_ohlc <- MarketApiProcess(currency_pair = c("XBT","EUR"),action = "OHLC")
new_ohlc
load("~/Desktop/GithubX/ProjectX/data/raw/OHLC_XBT_EUR.RDATA")
zacni <- new_ohlc$last
OHLC <- data_append_existing(old = OHLC,new=new_ohlc$ohlc)
tail(OHLC)
head(new_ohlc$ohlc)
OHLC <- data_append_existing(old = OHLC,new=new_ohlc$ohlc)
save(list("zacni","OHLC"),"~/Desktop/GithubX/ProjectX/data/raw/OHLC_XBT_EUR.RDATA")
save(list("zacni","OHLC"),file = "~/Desktop/GithubX/ProjectX/data/raw/OHLC_XBT_EUR.RDATA")
save(list= c("zacni","OHLC"),file = "~/Desktop/GithubX/ProjectX/data/raw/OHLC_XBT_EUR.RDATA")
128/89
128/80
1.6*40
pops = rep(1:10000)
pops = rep(1000,10000)
sample(pop)
pop = rep(1000,10000)
sample(pop)
sample(1:length(pop))
ind = sam != 1:length(pop)
sam = sample(1:length(pop))
ind = sam != 1:length(pop)
sum(ind)
players = pop[ind]
player_1 = which(ind)
players_2 = pop[ind]
players_2 = sam[ind]
loss = 1/win
win = 1.25
loss = 1/win
sam = sample(1:length(pop))
ind = sam != 1:length(pop)
players_2 = sam[ind]
players_1 = which(ind)
who_win = sample(c(T,F),replace = T,prob =c(0.5,0.5))
who_win = sample(x = c(T,F),size = length(players_1),replace = T,prob =c(0.5,0.5))
players_1[who_win]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(pop)
hist(pop)
plot(pop,type = "|")
plot(pop,type = ".")
?plot
plot(pop,type = "+")
plot(pop,type = "p")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
0.8**10
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
mean(pop)
min(pop)
median(pp)
median(pop)
source('~/.active-rstudio-document')
median(pop)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
glove = readLines("glove.6B.100d.txt")
library(magrittr)
a = matrix(NA,length(glove),100)
names = rep(NA,400000)
for(i in 1:length(glove)){
tmp = glove[i]
tmp = strsplit(tmp," ") %>% unlist()
a[i,] = tmp[2:101]
names[i] = tmp[1]
}
a = apply(a,2,as.numeric)
rownames(a) = names
saveRDS(glove,"glove.RDS")
zmaga = sample(c(1,2,3),size = 10000,replace = T)
ugibam = sample(1:3)
ugibam = sample(1:3,size = 1)
i%%100
i = 10
i%%100
source('~/probability_condition.R')
wins
source('~/probability_condition.R')
source('~/probability_condition.R')
source('~/probability_condition.R')
mean(wins)
i  = 1
ugibam = sample(1:3,size = 1)
ugibam!=zmaga[i]
zmagam = zmaga[i]
novi = setdiff(1:3,zmagam)
novi
ugibam==novi
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
novi = setdiff(1:3,zmagam)
ugibam <- novi[ugibam!=novi]
vzamem = setdiff(novi,zmagam)
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
novi = setdiff(1:3,zmagam)
vzamem = sample(setdiff(novi,zmagam),size = 1)
zmagam == ugibam
setdiff(1:3,zmagam)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
library(magrittr)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
setdiff(1:3,zmagam) %>% sample(.,size = 1)
## u missed first one, you get the second chance
vzamem_ven = setdiff(1:3,zmagam)
## u missed first one, you get the second chance
vzamem_ven = setdiff(1:3,zmagam) %>%sample(.,size = 1)
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
vzamem_ven = setdiff(1:3,zmagam) %>%sample(.,size = 1)
new_guess = setdiff()
}
zmagam == ugibam
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
ugibam = sample(1:3,size = 1)
ugibam = sample(1:3,size = 1)
zmagam == ugibam
setdiff(1:3,c(zmagam,ugibam))
setdiff(1:3,c(zmagam,ugibam))
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## change your guess
new_guess = nove_moznosti[nove_moznosti!=ugibam]
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## change your guess
new_guess = nove_moznosti[nove_moznosti!=ugibam]
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## change your guess
new_guess = nove_moznosti[nove_moznosti!=ugibam]
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## change your guess
new_guess = nove_moznosti[nove_moznosti!=ugibam]
## did I win?
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam = 0
}
}
if(i%%100==0){
plot(cumsum(wins)/(1:length(wins)),type="l")
readline("Nadaljuj :")
}
}
warnings()
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## change your guess
new_guess = nove_moznosti[nove_moznosti!=ugibam]
## did I win?
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam = 0
}
}
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## change your guess
new_guess = nove_moznosti[nove_moznosti!=ugibam]
## did I win?
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam = 0
}
}
if(i%%100==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
readline("Nadaljuj :")
}
}
warnings()
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## change your guess
new_guess = nove_moznosti[nove_moznosti!=ugibam]
print(new_guess)
## did I win?
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam = 0
}
}
if(i%%100==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
readline("Nadaljuj :")
}
}
i = 98
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
set.seed(11)
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam)) %>%sample(.,size = 1)
## create new sample
nove_moznosti = setdiff(1:3,vzamem_ven)
## change your guess
new_guess = nove_moznosti[nove_moznosti!=ugibam]
print(new_guess)
## did I win?
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam = 0
}
}
if(i%%100==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
readline("Nadaljuj :")
}
}
setdiff(1:3,c(zmagam,ugibam))
vzamem_ven = sample(vzamem_ven,size = 1)
vzamem_ven
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam))
vzamem_ven = sample(x = vzamem_ven,size = 1)
vzamem_ven
## i cannot withdraw true one, and the selected one -- in case that you won initially, i sample which i remove --> you already lost
vzamem_ven = setdiff(1:3,c(zmagam,ugibam))
setdiff(1:3,c(ugibam,zmagam))
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## u didnt hit the first time, so I can only remove the wrong one (I am not allowed to remove the winner)
new_guess = setdiff(1:3,c(ugibam,zmagam))
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam[i] = 0
}
}
if(i%%100==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
readline("Nadaljuj :")
}
}
wins_menjam
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
##  menjam
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## u didnt hit the first time, so I can only remove the wrong one (I am not allowed to remove the winner)
out = setdiff(1:3,c(ugibam,zmagam))
new_guess = setdiff(1:3,ugibam,out)
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam[i] = 0
}
}
if(i%%100==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
readline("Nadaljuj :")
}
}
new_guess = setdiff(1:3,c(ugibam,out))
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## u didnt hit the first time, so I can only remove the wrong one (I am not allowed to remove the winner)
out = setdiff(1:3,c(ugibam,zmagam))
new_guess = setdiff(1:3,c(ugibam,out))
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam[i] = 0
}
}
if(i%%100==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
readline("Nadaljuj :")
}
}
set.seed(11)
wins = c()
library(magrittr)
zmaga = sample(c(1,2,3),size = 10000,replace = T)
## ne menjam
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
if(ugibam==zmaga[i]){
wins[i] = 1
}else{
wins[i]=0
}
if(i%%100==0){
plot(cumsum(wins)/(1:length(wins)),type="l")
Sys.sleep(1)
}
}
mean(wins)
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
##  menjam
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## u didnt hit the first time, so I can only remove the wrong one (I am not allowed to remove the winner)
out = setdiff(1:3,c(ugibam,zmagam))
new_guess = setdiff(1:3,c(ugibam,out))
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam[i] = 0
}
}
if(i%%100==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
Sys.sleep(1)
}
}
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
##  menjam
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## u didnt hit the first time, so I can only remove the wrong one (I am not allowed to remove the winner)
out = setdiff(1:3,c(ugibam,zmagam))
new_guess = setdiff(1:3,c(ugibam,out))
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam[i] = 0
}
}
if(i%%10==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
Sys.sleep(1)
}
}
wins_menjam = c()
zmaga = sample(c(1,2,3),size = 10000,replace = T)
##  menjam
for(i in 1:length(zmaga)){
ugibam = sample(1:3,size = 1)
zmagam = zmaga[i]
if(zmagam == ugibam){
## initial you won, but then u swapped wining condition
wins_menjam[i] = 0
}else{
## u missed first one, you get the second chance
## u didnt hit the first time, so I can only remove the wrong one (I am not allowed to remove the winner)
out = setdiff(1:3,c(ugibam,zmagam))
new_guess = setdiff(1:3,c(ugibam,out))
if(new_guess==zmagam){
wins_menjam[i] = 1
}else{
wins_menjam[i] = 0
}
}
if(i%%100==0){
plot(cumsum(wins_menjam)/(1:length(wins_menjam)),type="l")
Sys.sleep(1)
}
}
source('~/Desktop/marko_paper/github_code/FederatedLearningViaCoTraining/experiments/synth_michael/allign_plots.R')
setwd("~/Desktop/marko_paper/github_code/FederatedLearningViaCoTraining/experiments/synth_michael")
source('~/Desktop/marko_paper/github_code/FederatedLearningViaCoTraining/experiments/synth_michael/allign_plots.R')

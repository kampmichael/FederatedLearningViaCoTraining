z=d2[[1]]
z = apply(z, 2, function(x)EMA_cpp(x,5))
g4 = ggplot() +
geom_line(aes(x=1:nrow(z),y=z[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(z),y=z[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.65,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("30% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g4
warnings()
d2
d3
d1
d2
d2
d2[[4]] = na.omit(d2[[4]])
d2
saveRDS(d2,file = "data_30_n5.RDS")
g4
z
z=d2[[1]]
z = apply(z, 2, function(x)EMA_cpp(x,5))
g4 = ggplot() +
geom_line(aes(x=1:nrow(z),y=z[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(z),y=z[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("30% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g4
z1=d1[[2]]
z1 = apply(z1, 2, function(x)EMA_cpp(x,5))
g5 = ggplot() +
geom_line(aes(x=1:nrow(z1),y=z1[,1]),col="springgreen",lwd=0.75) +
geom_line(aes(x=1:nrow(z1),y=z1[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(z1),y=z1[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(z1),y=z1[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(z1),y=z1[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z1),y=rep(d2[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("30% reference dataset, 66% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g5
g7 = ggplot() +
geom_line(aes(x=1:nrow(w),y=w[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(w),y=w[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("50% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g7
w=d2[[1]]
w = apply(w, 2, function(x)EMA_cpp(x,5))
g7 = ggplot() +
geom_line(aes(x=1:nrow(w),y=w[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(w),y=w[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("50% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g7
w2=d3[[3]]
w2 = apply(w2, 2, function(x)EMA_cpp(x,5))
g9 = ggplot() +
geom_line(aes(x=1:nrow(w2),y=w2[,1]),col="springgreen",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=w2[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=w2[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=w2[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=w2[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("50% reference dataset, 100% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g9
w2
w2=d3[[3]]
w2 = apply(w2, 2, function(x)EMA_cpp(x,5))
g9 = ggplot() +
geom_line(aes(x=1:nrow(w2),y=w2[,1]),col="springgreen",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=w2[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=w2[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=w2[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=w2[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,2],nrow(w2))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,3],nrow(w2))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,4],nrow(w2))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,5],nrow(w2))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][1,6],nrow(w2))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,2],nrow(w2))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,3],nrow(w2))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,4],nrow(w2))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,5],nrow(w2))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w2),y=rep(d3[[4]][2,6],nrow(w2))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("50% reference dataset, 100% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g9
w1=d3[[2]]
w1 = apply(w1, 2, function(x)EMA_cpp(x,5))
g8 = ggplot() +
geom_line(aes(x=1:nrow(w1),y=w1[,1]),col="springgreen",lwd=0.75) +
geom_line(aes(x=1:nrow(w1),y=w1[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(w1),y=w1[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(w1),y=w1[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(w1),y=w1[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][1,2],nrow(w1))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][1,3],nrow(w1))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][1,4],nrow(w1))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][1,5],nrow(w1))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][1,6],nrow(w1))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][2,2],nrow(w1))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][2,3],nrow(w1))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][2,4],nrow(w1))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][2,5],nrow(w1))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w1),y=rep(d3[[4]][2,6],nrow(w1))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("50% reference dataset, 66% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
w8
g8
w=d3[[1]]
w = apply(w, 2, function(x)EMA_cpp(x,5))
g7 = ggplot() +
geom_line(aes(x=1:nrow(w),y=w[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(w),y=w[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,2],nrow(w))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,3],nrow(w))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,4],nrow(w))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,5],nrow(w))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,6],nrow(w))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,2],nrow(w))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,3],nrow(w))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,4],nrow(w))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,5],nrow(w))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,6],nrow(w))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("50% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g7
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot.R')
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot.R')
jpeg(filename = "ANN_eye_test_ACC.JPG", pointsize =12, quality = 100,width = 1200,height = 1200)
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
dev.off()
jpeg(filename = "ANN_eye_test_ACC.JPG", pointsize =12, quality = 100,width = 1800,height = 1800)
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
dev.off()
jpeg(filename = "ANN_eye_test_ACC.JPG", pointsize =12, quality = 100,width = 1800,height = 1200)
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
dev.off()
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot.R')
d1 = readRDS("data_18_n5.RDS")
d2 = readRDS("data_30_n5.RDS")
d3 = readRDS("data_50_n5.RDS")
library(projectXcppCode)
library(reshape2)
y=d1[[1]]
y = apply(y, 2, function(x)EMA_cpp(x,5))
g1 = ggplot() +
geom_line(aes(x=1:nrow(y),y=y[,1+5]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(y),y=y[,2+5]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,3+5]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,4+5]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,5+5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,2+5],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,3+5],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,4+5],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,5+5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,6+5],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,2+5],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,3+5],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,4+5],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,5+5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,6+5],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.62,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g1
y=d1[[1]]
y = apply(y, 2, function(x)EMA_cpp(x,5))
g1 = ggplot() +
geom_line(aes(x=1:nrow(y),y=y[,1+5]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(y),y=y[,2+5]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,3+5]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,4+5]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,5+5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,2+5],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,3+5],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,4+5],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,5+5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,6+5],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,2+5],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,3+5],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,4+5],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,5+5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,6+5],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
# ylim(0.62,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g1
y=d1[[1]]
y = apply(y, 2, function(x)EMA_cpp(x,5))
g1 = ggplot() +
geom_line(aes(x=1:nrow(y),y=y[,1+5]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(y),y=y[,2+5]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,3+5]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,4+5]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,5+5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,2+5],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,3+5],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,4+5],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,5+5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,6+5],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,2+5],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,3+5],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,4+5],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,5+5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,6+5],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.7,0.925)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g1
y1=d1[[2]]
y1 = apply(y1, 2, function(x)EMA_cpp(x,5))
g2 = ggplot() +
geom_line(aes(x=1:nrow(y1),y=y1[,1+5]),col="springgreen",lwd=0.75) +
geom_line(aes(x=1:nrow(y1),y=y1[,2+5]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y1),y=y1[,3+5]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y1),y=y1[,4+5]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y1),y=y1[,5+5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][1,2+5],nrow(y1))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][1,3+5],nrow(y1))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][1,4+5],nrow(y1))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][1,5+5],nrow(y1))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][1,6+5],nrow(y1))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][2,2+5],nrow(y1))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][2,3+5],nrow(y1))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][2,4+5],nrow(y1))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][2,5+5],nrow(y1))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y1),y=rep(d1[[4]][2,6+5],nrow(y1))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
# ylim(0.62,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 66% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g2
y2=d1[[3]]
y2 = apply(y2, 2, function(x)EMA_cpp(x,5))
g3 = ggplot() +
geom_line(aes(x=1:nrow(y2),y=y2[,1+5]),col="springgreen",lwd=0.75) +
geom_line(aes(x=1:nrow(y2),y=y2[,2+5]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y2),y=y2[,3+5]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y2),y=y2[,4+5]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y2),y=y2[,5+5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][1,2+5],nrow(y2))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][1,3+5],nrow(y2))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][1,4+5],nrow(y2))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][1,5+5],nrow(y2))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][1,6+5],nrow(y2))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][2,2+5],nrow(y2))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][2,3+5],nrow(y2))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][2,4+5],nrow(y2))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][2,5+5],nrow(y2))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y2),y=rep(d1[[4]][2,6+5],nrow(y2))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.7,0.925)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 100% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g3
z=d2[[1]]
z = apply(z, 2, function(x)EMA_cpp(x,5))
g4 = ggplot() +
geom_line(aes(x=1:nrow(z),y=z[,1+5]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(z),y=z[,2+5]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,3+5]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,4+5]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,5+5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,2+5],nrow(z))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,3+5],nrow(z))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,4+5],nrow(z))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,5+5],nrow(z))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,6+5],nrow(z))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,2+5],nrow(z))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,3+5],nrow(z))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,4+5],nrow(z))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,5+5],nrow(z))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,6+5],nrow(z))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.7,0.925)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("30% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g4
z=d2[[1]]
z = apply(z, 2, function(x)EMA_cpp(x,5))
g4 = ggplot() +
geom_line(aes(x=1:nrow(z),y=z[,1+5]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(z),y=z[,2+5]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,3+5]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,4+5]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=z[,5+5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,2+5],nrow(z))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,3+5],nrow(z))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,4+5],nrow(z))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,5+5],nrow(z))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][1,6+5],nrow(z))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,2+5],nrow(z))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,3+5],nrow(z))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,4+5],nrow(z))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,5+5],nrow(z))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(z),y=rep(d2[[4]][2,6+5],nrow(z))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.65,0.925)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("30% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g4
g7 = ggplot() +
geom_line(aes(x=1:nrow(w),y=w[,1+5]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(w),y=w[,2+5]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,3+5]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,4+5]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=w[,5+5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,2+5],nrow(w))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,3+5],nrow(w))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,4+5],nrow(w))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,5+5],nrow(w))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][1,6+5],nrow(w))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,2+5],nrow(w))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,3+5],nrow(w))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,4+5],nrow(w))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,5+5],nrow(w))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(w),y=rep(d3[[4]][2,6+5],nrow(w))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.55,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("50% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g7
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot_auc.R')
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot_auc.R')
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot_auc.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot_acc.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/ANN/plot_auc.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/main_80_n5.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_acc.R')
warnings()
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_auc.R')
g1 = ggplot() +
geom_line(aes(x=1:nrow(y),y=y[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(y),y=y[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
# ylim(0.62,0.825)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g1
y=d1[[1]]
y = apply(y, 2, function(x)EMA_cpp(x,5))
g1 = ggplot() +
geom_line(aes(x=1:nrow(y),y=y[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(y),y=y[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.82,0.95)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g1
y=d1[[1]]
y = apply(y, 2, function(x)EMA_cpp(x,5))
g1 = ggplot() +
geom_line(aes(x=1:nrow(y),y=y[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(y),y=y[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.82,0.935)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g1
library(reshape2)
y=d1[[1]]
y = apply(y, 2, function(x)EMA_cpp(x,2))
g1 = ggplot() +
geom_line(aes(x=1:nrow(y),y=y[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(y),y=y[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.82,0.935)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g1
y=d1[[1]]
y = apply(y, 2, function(x)EMA_cpp(x,2))
g1 = ggplot() +
geom_line(aes(x=1:nrow(y),y=y[,1]),col="springgreen",lwd=0.75,) +
geom_line(aes(x=1:nrow(y),y=y[,2]),col="springgreen4",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,3]),col="steelblue",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,4]),col="turquoise",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=y[,5]),col="slateblue1",lwd=0.75) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][1,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,2],nrow(y))),lwd=0.75,col="springgreen",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,3],nrow(y))),lwd=0.75,col="springgreen4",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,4],nrow(y))),lwd=0.75,col="steelblue",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,5],nrow(y))),lwd=0.75,col="turquoise",linetype="dashed",alpha=0.8) +
geom_line(aes(x=1:nrow(y),y=rep(d1[[4]][2,6],nrow(y))),lwd=0.75,col="slateblue1",linetype="dashed",alpha=0.8) +
ylim(0.8,0.935)+
xlab("Iteration of proposed method") + ylab("Agent's test accuracy") + ggtitle("18% reference dataset, 33% per iteration",subtitle = "lower dash = solo, higher dash = global, colour = agent")
g1
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_acc.R')
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_acc.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_acc.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_acc.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_auc.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_auc.R')
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/RF/plot_auc.R')
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/GLM/plot_acc.R')
multiplot(g1,g4,g7,g2,g5,g8,g3,g6,g9,cols=3)
source('~/Desktop/marko_paper/FederatedLearningViaCoTraining/experiments/open_ml_eeg_eye/GLM/plot_auc.R')
